<?php
error_reporting (0); session_start (); date_default_timezone_set ("Ch√¢u √Å / Ho_Chi_Minh"); $ xnhac = "\ 033 [1; 36 ph√∫t"; $ den = "\ 033 [1; 30m"; $ do = "\ 033 [1; 31 ph√∫t"; $ luc = "\ 033 [1; 32 ph√∫t"; $ vang = "\ 033 [1; 33 ph√∫t"; $ xduong = "\ 033 [1; 34m"; $ hong = "\ 033 [1; 35 ph√∫t"; $ trang = "\ 033 [1; 37 ph√∫t"; $ _SESSION ['useragent'] = 'Mozilla / 5.0 (Linux; Android 10; CPH1819) AppleWebKit / 537.36 (KHTML, nh∆∞ Gecko) Chrome / 87.0.4280.101 Mobile Safari / 537.36'; $ thanh_xau = $ do. "[". $ luc. "‚óè". $ do. "]". $ trang. "=>"; $ thanh_dep = $ do. "[". $ luc. "‚óè". $ do. "]". $ trang. "=>"; gioithieu ($ banner, $ thanh_xau); $ khock = []; echo $ thanh_dep. $ luc. "B·∫°n Mu·ªën Nh·∫≠p B·∫£o Nhi√™u Cookie: $ vang"; $ slg = trim (fgets (STDIN)); while ($ a <$ slg) {$ a ++; echo $ thanh_dep. $ luc. "Nh·∫≠p Cookie Th·ª© $ a: $ vang"; $ nhapck = (string) trim (fgets (STDIN)); if ($ nhapck == '') {break;} array_push ($ khock, $ nhapck); } $ soacc = count ($ khock); chay (14) ;; $ khoCMT = []; echo $ thanh_dep. $ luc. "B·∫°n Mu·ªën Nh·∫≠p Bao Nhi√™u N·ªôi Dung: $ vang"; $ snd = trim (fgets (STDIN)); while ($ b <$ snd) {$ b ++; echo $ thanh_dep. $ luc. "Nh·∫≠p N·ªôi Dung Th·ª© $ b: $ vang"; $ nhapck = (string) trim (fgets (STDIN)); if ($ nhapck == '') {break;} array_push ($ khoCMT, $ nhapck); } $ soacc = count ($ khoCMT); chay (14) ;; echo $ thanh_dep. $ luc. "Import Delay: $ vang"; $ delay = trim (fgets (STDIN)); echo $ thanh_dep. $ luc. "Sau Bao Nhi√™u V·ª• Th√¨ Chuy·ªÉn Acc: $ vang"; $ yyy = trim (fgets (STDIN)); echo $ thanh_dep. $ luc. "Nh·∫≠p S·ªë l·∫ßn Th∆∞ r√°c: $ vang"; $ stop = trim (fgets (STDIN)); chay (14) ;; $ kho_ID = []; $ head [] = "K·∫øt n·ªëi: duy tr√¨ ho·∫°t ƒë·ªông"; $ head [] = "Keep-Alive: 300"; $ head [] = "quy·ªÅn: m.facebook.com"; $ head [] = "ccept-Charset: ISO-8859-1, utf-8; q = 0,7, *; q = 0,7"; $ head [] = "accept-language: vi-VN, vi; q = 0.9, fr-FR; q = 0.8, fr; q = 0.7, en-US; q = 0.6, en; q = 0.5"; $ head [] = "cache-control: max-age = 0"; $ head [] = "n√¢ng c·∫•p-kh√¥ng an to√†n-y√™u c·∫ßu: 1"; $ head [] = "accept: text / html, application / xhtml + xml, application / xml; q = 0.9, image / webp, image / apng, * / *; q = 0.8, application / sign-exchange; v = b3; q = 0,9 "; $ head [] = "sec-fetch-site: none"; $ head [] = "gi√¢y-t√¨m n·∫°p-ch·∫ø ƒë·ªô: ƒëi·ªÅu h∆∞·ªõng"; $ head [] = "sec-fetch-user:? 1"; $ head [] = "sec-fetch-dest: document"; curl_setopt ($ ch, CURLOPT_USERAGENT, 'Mozilla / 5.0 (Linux; Android 10; CPH1819) AppleWebKit / 537.36 (KHTML, nh∆∞ Gecko) Chrome / 87.0.4280.101 Mobile Safari / 537.36 '); curl_setopt ($ ch, CURLOPT_ENCODING, ''); curl_setopt ($ ch, CURLOPT_COOKIE, $ cookie); curl_setopt ($ ch, CURLOPT_HTTPHEADER, $ head); curl_setopt ($ ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt ($ ch, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt ($ ch, CURLOPT_TIMEOUT, 60); curl_setopt ($ ch, CURLOPT_CONNECTTIMEOUT, 60); curl_setopt ($ ch, CURLOPT_FOLLOWLOCATION, TRUE); curl_setopt ($ ch, CURLOPT_HTTPHEADER, array ('K·ª≥ v·ªçng:')); $ data = array ('message' => $ msg, 'access_token' => $ access_token); curl_setopt ($ ch, CURLOPT_POST, count ($ data)); curl_setopt ($ ch, CURLOPT_POSTFIELDS, $ data); $ access = curl_exec ($ ch); curl_close ($ ch); $ get = json_decode ($ truy c·∫≠p); $ g = $ get-> l·ªói; if ($ get -> {'code'} == 190) {echo "Cookie Die !!?! \ n"; array_splice ($ khock, $ xz, 1); $ th∆∞ r√°c = 1; ngh·ªâ; } if ($ get -> {'code'} == 368) {echo "\ 033 [1; 91m". $ get -> {'message'}; echo "\ n"; $ th∆∞ r√°c = 1; break;} $ maul = rand (31,37); $ maui = "\ 033 [1;". $ maul. "m"; $ dem ++; echo $ xnhac. "[$ dem] ‚ö° \ 033 [1; 31m [\ 033 [1; 35m" .date ('H: i: s'). "\ 033 [1; 31m]". $ xnhac. " ‚ö°ƒê√£ ". $ Maui." B√åNH LU·∫¨N ". $ Xnhac." Th√†nh C√¥ng b√†i vi·∫øt üëâ ". $ Vang. $ Id." \ N "; echo $ vang. "[". $ do. "TEXT". $ vang. "]:". $ trang. $ msg. "\ n"; if ($ dem> = $ stop) {echo $ luc. "ƒê√£ Spam Th√†nh C√¥ng $ i B√†i Vi·∫øt \ n"; l·ªëi ra; } delay ($ delay); if ($ dem% $ yyy == 0) {$ spam = 1; ngh·ªâ; }} else {echo $ do. "L∆∞·ªõt T√¨m B√†i Vi·∫øt. \ r"; }}}}} function laytoken ($ cookie) {$ head = array ("K·∫øt n·ªëi: CURLOPT_RETURNTRANSFER => 1, CURLOPT_SSL_VERIFYPEER => FALSE, CURLOPT_TIMEOUT => 60, CURLOPT_CONNECTTIMEOUT => 60, CURLOPT_FOLLOWLOCATION => TRUE)); $ access = curl_exec ($ ch); curl_close ($ ch); $ access_token = 'EAAG'.explode (' "," ', b√πng n·ªï (' EAAG ', $ access) [1]) [0]; if (strlen ($ access_token)> 5) {return $ access_token; } else {return '2'; }} function gethome ($ cookie) {$ ch = curl_init (); curl_setopt ($ ch, CURLOPT_URL, 'https: //mbasic.facebook.com/home.php'); $ head [] = "K·∫øt n·ªëi: duy tr√¨ ho·∫°t ƒë·ªông"; $ head [] = "Keep-Alive: 300"; $ head [] = "quy·ªÅn: m.facebook.com"; $ head [] = "ccept-Charset: ISO-8859-1, utf-8; q = 0,7, *; q = 0,7"; $ head [] = "accept-language: vi-VN, vi; q = 0.9, fr-FR; q = 0.8, fr; q = 0.7, en-US; q = 0.6, en; q = 0.5"; $ head [] = "cache-control: curl_close ($ ch); } function delay ($ delay) {for ($ tt = $ delay; $ tt> = 1; $ tt -) {echo "\ r \ 033 [1; 33m NMD \ 033 [1; 31m ~> \ 033 [ 1; 32m LO \ 033 [1; 31m | $ tt | "; us ng·ªß (150000); echo "\ r \ 033 [1; 31m NMD \ 033 [0; 33m ~> \ 033 [0; 37m LOA \ 033 [0; 31m | $ tt |"; us ng·ªß (150000); echo "\ r \ 033 [1; 32m NMD \ 033 [0; 33m ~> \ 033 [0; 37m T·∫¢I \ 033 [0; 31m | $ tt |"; us ng·ªß (150000); echo "\ r \ 033 [1; 34m NMD \ 033 [0; 33m ~> \ 033 [0; 37m LOADI \ 033 [0; 31m | $ tt |"; us ng·ªß (150000); echo "\ r \ 033 [1; 35m NMD \ 033 [0; 33m ~> \ 033 [0; 37m LOADIN \ 033 [0; 31m | $ tt |"; us ng·ªß (150000); echo "\ r \ 033 [1; 35m NMD \ 033 [0; 33m ~> \ 033 [0; 37m T·∫¢I \ 033 [0; 31m | $ tt |"; us ng·ªß (150000); echo "\ r \ 033 [1; 35m NMD \ 033 [0; 33m ~> \ 033 [0; 37m T·∫¢I. \ 033 [0; 31m | $ tt |"; usleep (150000);} echo "\ r \ e [1; 95m ‚ö°Dichvufbsieure. tr·ªçng t·∫£i']); echo $ thanh_xau. "\ 033 [1; 33mB·∫£n Quy·ªÅn: \ 033 [1; 34m NMD \ n"; usleep ($ _ SESSION ['load']); chay (14);} tr·ªçng t·∫£i']); echo $ thanh_xau. "\ 033 [1; 33mB·∫£n Quy·ªÅn: \ 033 [1; 34m NMD \ n"; usleep ($ _ SESSION ['load']); chay (14);}